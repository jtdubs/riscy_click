TODO:
- Sim UI
    - Halt output
    - Finish output
    - External Interrupt input
- Machine Level ISA
    - CSR
        - Provide mechanism to take an address and return RWX flags from matching PMP entry
        - Test new CSRs
        - MIE/MIP CSR
        - MTIME and MTIMECMP memory mapped registers??
    - Instructions
        - ECALL & EBREAK
        - MRET
        - WFI
    - Chipset
        - External interrupts
- Debug Extension
- Peripherals
    - PS/2
    - UART
- ISA Extensions
    - A - Atomics
    - C - Compressed
    - M - Multiplication & Division (multi-cycle)
- VGA
    - 1280x1024
- Memory
    - Allow for memory stalls
    - Add instruction & data cache
    - Add memory controller and DDR

Reference:
http://fpgacpu.ca/fpga/index.html
https://passlab.github.io/CSE564/notes/lecture09_RISCV_Impl_pipeline.pdf
https://github.com/ultraembedded/riscv/
https://github.com/combinatorylogic/soc/blob/master/backends/c2/hw/rtl/core.v
https://github.com/google/riscv-dv
https://github.com/riscv/riscv-isa-sim
https://github.com/rems-project/sail-riscv
