TODO:
- UART
    - BIOS support
    - How do I want to handle this in the simulator?  Feels like another window.
    - Flow Control
- ISA Extensions
    - C - Compressed
- Memory
    - Allow for memory stalls
    - Add instruction & data cache
    - Add memory controller and DDR
- BIOS
    - Provide UART interface for loading an ELF and jumping to it
- ISA Extensions
    - M - Multiplication & Division (multi-cycle)
    - A - Atomics
- Machine Level ISA
    - CSR
        - Decode should confirm address is read/executable, otherwise trap
        - Memory access should confirm address is read/write as appropriate
        - Expose chip select along with rwx.  Can use it externally to drive the dmem mux...
        - MTIME and MTIMECMP memory mapped registers??
        - Implement timers
- PS/2
    - Full PS/2 driver including sending commands back to keyboard
    - PS/2 Mouse
- CPU
    - Change stage breakdown or increase stages to up clock speed

Reference:
http://fpgacpu.ca/fpga/index.html
https://passlab.github.io/CSE564/notes/lecture09_RISCV_Impl_pipeline.pdf
https://github.com/ultraembedded/riscv/
https://github.com/combinatorylogic/soc/blob/master/backends/c2/hw/rtl/core.v
https://github.com/google/riscv-dv
https://github.com/riscv/riscv-isa-sim
https://github.com/rems-project/sail-riscv

Implemented ISA:
- RV32I
- Zicsr
- Zifencei
