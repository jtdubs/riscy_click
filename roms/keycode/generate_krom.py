#!/usr/bin/python3

import sys

# From AT Keyboard Scan Codes (Set 2)
scancodes = {
    # letters
    0x001C: "KEY_A",
    0x0032: "KEY_B",
    0x0021: "KEY_C",
    0x0023: "KEY_D",
    0x0024: "KEY_E",
    0x002B: "KEY_F",
    0x0034: "KEY_G",
    0x0033: "KEY_H",
    0x0043: "KEY_I",
    0x003B: "KEY_J",
    0x0042: "KEY_K",
    0x004B: "KEY_L",
    0x003A: "KEY_M",
    0x0031: "KEY_N",
    0x0044: "KEY_O",
    0x004D: "KEY_P",
    0x0015: "KEY_Q",
    0x002D: "KEY_R",
    0x001B: "KEY_S",
    0x002C: "KEY_T",
    0x003C: "KEY_U",
    0x002A: "KEY_V",
    0x001D: "KEY_W",
    0x0022: "KEY_X",
    0x0035: "KEY_Y",
    0x001A: "KEY_Z",
    # numbers
    0x0045: "KEY_0",
    0x0016: "KEY_1",
    0x001E: "KEY_2",
    0x0026: "KEY_3",
    0x0025: "KEY_4",
    0x002E: "KEY_5",
    0x0036: "KEY_6",
    0x003D: "KEY_7",
    0x003E: "KEY_8",
    0x0046: "KEY_9",
    # function keys
    0x0005: "KEY_F1",
    0x0006: "KEY_F2",
    0x0004: "KEY_F3",
    0x000C: "KEY_F4",
    0x0003: "KEY_F5",
    0x000B: "KEY_F6",
    0x0083: "KEY_F7",
    0x000A: "KEY_F8",
    0x0001: "KEY_F9",
    0x0009: "KEY_F10",
    0x0078: "KEY_F11",
    0x0007: "KEY_F12",
    # keypad
    0x0070: "KEY_KP0",
    0x0069: "KEY_KP1",
    0x0072: "KEY_KP2",
    0x007A: "KEY_KP3",
    0x006B: "KEY_KP4",
    0x0073: "KEY_KP5",
    0x0074: "KEY_KP6",
    0x006C: "KEY_KP7",
    0x0075: "KEY_KP8",
    0x007D: "KEY_KP9",
    0xE04A: "KEY_KPSLASH",
    0x007C: "KEY_KPASTERISK",
    0x007B: "KEY_KPMINUS",
    0x0079: "KEY_KPPLUS",
    0xE05A: "KEY_KPENTER",
    0x0071: "KEY_KPDOT",
    # insert cluster
    0xE070: "KEY_INSERT",
    0xE06C: "KEY_HOME",
    0xE07D: "KEY_PAGEUP",
    0xE07A: "KEY_PAGEDOWN",
    0xE069: "KEY_END",
    0xE071: "KEY_DELETE",
    # arrows
    0xE075: "KEY_UP",
    0xE072: "KEY_DOWN",
    0xE06B: "KEY_LEFT",
    0xE074: "KEY_RIGHT",
    # control keys
    0x0012: "KEY_LEFTSHIFT",
    0x0014: "KEY_LEFTCTRL",
    0xE01F: "KEY_LEFTMETA",
    0x0011: "KEY_LEFTALT",
    0x0059: "KEY_RIGHTSHIFT",
    0xE059: "KEY_RIGHTSHIFT", # BUG: Nexys A7 reports Right Shift as EO 59
    0xE014: "KEY_RIGHTCTRL",
    0xE027: "KEY_RIGHTMETA",
    0xE011: "KEY_RIGHTALT",
    0xE02F: "KEY_COMPOSE",
    0x0076: "KEY_ESC",
    # symbols / punctuation
    0x000E: "KEY_GRAVE",
    0x004E: "KEY_MINUS",
    0x0055: "KEY_EQUAL",
    0x005D: "KEY_BACKSLASH",
    0x0054: "KEY_LEFTBRACE",
    0x005B: "KEY_RIGHTBRACE",
    0x004C: "KEY_SEMICOLON",
    0x0052: "KEY_APOSTROPHE",
    0x0041: "KEY_COMMA",
    0x0049: "KEY_DOT",
    0x004A: "KEY_SLASH",
    # spaces
    0x0066: "KEY_BACKSPACE",
    0x000D: "KEY_TAB",
    0x0029: "KEY_SPACE",
    0x005A: "KEY_ENTER",
    # keyboard control
    0x0058: "KEY_CAPSLOCK",
    0x007E: "KEY_SCROLLLOCK",
    0x0077: "KEY_NUMLOCK",
}

# from /usr/include/linux/input-event-codes.h
virtual_keys = {
    "KEY_RESERVED":     0,
    "KEY_ESC":          1,
    "KEY_1":            2,
    "KEY_2":            3,
    "KEY_3":            4,
    "KEY_4":            5,
    "KEY_5":            6,
    "KEY_6":            7,
    "KEY_7":            8,
    "KEY_8":            9,
    "KEY_9":            10,
    "KEY_0":            11,
    "KEY_MINUS":        12,
    "KEY_EQUAL":        13,
    "KEY_BACKSPACE":    14,
    "KEY_TAB":          15,
    "KEY_Q":            16,
    "KEY_W":            17,
    "KEY_E":            18,
    "KEY_R":            19,
    "KEY_T":            20,
    "KEY_Y":            21,
    "KEY_U":            22,
    "KEY_I":            23,
    "KEY_O":            24,
    "KEY_P":            25,
    "KEY_LEFTBRACE":    26,
    "KEY_RIGHTBRACE":   27,
    "KEY_ENTER":        28,
    "KEY_LEFTCTRL":     29,
    "KEY_A":            30,
    "KEY_S":            31,
    "KEY_D":            32,
    "KEY_F":            33,
    "KEY_G":            34,
    "KEY_H":            35,
    "KEY_J":            36,
    "KEY_K":            37,
    "KEY_L":            38,
    "KEY_SEMICOLON":    39,
    "KEY_APOSTROPHE":   40,
    "KEY_GRAVE":        41,
    "KEY_LEFTSHIFT":    42,
    "KEY_BACKSLASH":    43,
    "KEY_Z":            44,
    "KEY_X":            45,
    "KEY_C":            46,
    "KEY_V":            47,
    "KEY_B":            48,
    "KEY_N":            49,
    "KEY_M":            50,
    "KEY_COMMA":        51,
    "KEY_DOT":          52,
    "KEY_SLASH":        53,
    "KEY_RIGHTSHIFT":   54,
    "KEY_KPASTERISK":   55,
    "KEY_LEFTALT":      56,
    "KEY_SPACE":        57,
    "KEY_CAPSLOCK":     58,
    "KEY_F1":           59,
    "KEY_F2":           60,
    "KEY_F3":           61,
    "KEY_F4":           62,
    "KEY_F5":           63,
    "KEY_F6":           64,
    "KEY_F7":           65,
    "KEY_F8":           66,
    "KEY_F9":           67,
    "KEY_F10":          68,
    "KEY_NUMLOCK":      69,
    "KEY_SCROLLLOCK":   70,
    "KEY_KP7":          71,
    "KEY_KP8":          72,
    "KEY_KP9":          73,
    "KEY_KPMINUS":      74,
    "KEY_KP4":          75,
    "KEY_KP5":          76,
    "KEY_KP6":          77,
    "KEY_KPPLUS":       78,
    "KEY_KP1":          79,
    "KEY_KP2":          80,
    "KEY_KP3":          81,
    "KEY_KP0":          82,
    "KEY_KPDOT":        83,
    "KEY_F11":          87,
    "KEY_F12":          88,
    "KEY_KPENTER":      96,
    "KEY_RIGHTCTRL":    97,
    "KEY_KPSLASH":      98,
    "KEY_SYSRQ":        99,
    "KEY_RIGHTALT":     100,
    "KEY_HOME":         102,
    "KEY_UP":           103,
    "KEY_PAGEUP":       104,
    "KEY_LEFT":         105,
    "KEY_RIGHT":        106,
    "KEY_END":          107,
    "KEY_DOWN":         108,
    "KEY_PAGEDOWN":     109,
    "KEY_INSERT":       110,
    "KEY_DELETE":       111,
    "KEY_PAUSE":        119,
    "KEY_LEFTMETA":     125,
    "KEY_RIGHTMETA":    126,
    "KEY_COMPOSE":      127,
}

def main(*args):
    print("@0000")

    for scancode in range(0x00, 0x100):
        if scancode in scancodes:
            print("{0:02X}".format(virtual_keys[scancodes[scancode]]))
        else:
            print("{0:02X}".format(0x00))

    for scancode in range(0xE000, 0xE100):
        if scancode in scancodes:
            print("{0:02X}".format(virtual_keys[scancodes[scancode]]))
        else:
            print("{0:02X}".format(0x00))

if __name__ == "__main__":
    main(sys.argv)
